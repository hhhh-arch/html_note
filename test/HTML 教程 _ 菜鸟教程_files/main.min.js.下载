// author: runoob
jQuery(document).ready(function ($){
   
    searchKey = ''
    $(".pay_item").click(function(){
        $(this).addClass('checked').siblings('.pay_item').removeClass('checked');
        var dataid=$(this).attr('data-id');
        $(".shang_payimg img").attr("src","https://static.jyshare.com/images/dashang/"+dataid+"img.png");
        $("#shang_pay_txt").text(dataid=="alipay"?"支付宝":"微信");
    });
    //搜索
    $(".search-reveal").click(function() {
        $(".row-search-mobile").slideToggle("400",
        function() {});
    });
    
    $('.placeholder').on('blur',function(){
        if($(this).val() == ""){
            if(searchKey) {
                $(this).val(searchKey);
            } else {
                $(this).val("搜索……");
            }
             
         }
    });
    $('.placeholder').on('focus',function(){
     if($(this).val() == '搜索……') {
          $(this).val('');
       }
    });
    $('#feed_email').on('blur',function(){
        if($(this).val() == ""){
         $(this).val("输入邮箱 订阅笔记");
         }
    });
    $('#feed_email').on('focus',function(){
     if($(this).val() == '输入邮箱 订阅笔记') {
          $(this).val('');
       }
    });

    // 底纹
    if($("#s").length) {
        if(readCookie("runoob-uuid")) {
            userID = readCookie("runoob-uuid");
        }
        rekey = RegExp(/[(\ )(\~)(\~)(\!)(\！)(\@)(\#)(\$)(\￥)(\%)(\^)(\……)(\&)(\*)(\()(\（)(\))(\）)(\-)(\_))(\——)(\+)(\=)(\[)(\【)(\])(\】)(\{)(\})(\|))(\、))(\)(\\)(\;)(\；)(\:)(\：)(\')(\‘)(\’)(\")(\“)(\”)(\,)(\，)(\.)(\。)(\/)(\《)(\<)(\>)(\》)(\?)(\？)(\)]+/);
        
        $.getJSON("https://www.runoob.com/wp-content/themes/runoob/option/alisearch/v330/hot_hint.php?type=hint&user_id=" + userID,function(data){
            $.each( data, function( key, val ) {
                
                if($.isNumeric(val['hint']))  {
                    return;
                }
                if (rekey.test(val['hint'])) {
                    return;
                }
                $("#s").attr("placeholder", val['hint']);
                searchKey = val['hint'];
                
            });
        })
        $(document).on('keypress',function(e) {
            if(e.which == 13) {
                if($("#s").val() == '') {
                    $("#s").val(searchKey);
                }
            }
        });
    }
    
    //代码高亮
    $('pre').each(function() {
        if(!$(this).hasClass("prettyprint")) {
            $(this).addClass("prettyprint");
        }
    });
    //pre 复制--
    document.querySelectorAll('pre').forEach(function (codeBlock) {
        var button = document.createElement('button');
        button.className = 'copy-code-button';
        button.type = 'button';
        var s = codeBlock.innerText;
        s = s.replace(/\u00A0/ig, " "); //去除&nbsp;空格(/u00a0)
        button.setAttribute('data-clipboard-text',s);
        button.innerText = '';
        // button.setAttribute('title', 'Copiar para a área de transferência');

        // var pre = codeBlock.parentNode;
        codeBlock.classList.add('prettyprint');
        // pre.parentNode.insertBefore(button, pre);
        codeBlock.appendChild(button);    
        // 添加鼠标移入事件处理程序
        codeBlock.addEventListener("mouseover", function(event) {
            // 在此处编写鼠标移入时的操作
            button.style.display = "block";
        });
        
        // 添加鼠标移出事件处理程序
        codeBlock.addEventListener("mouseout", function(event) {
            // 在此处编写鼠标移出时的操作
            button.style.display = "none";
        });     
    });
    $('.example_code').each(function(codeBlock) {
        var button = document.createElement('button');
        button.className = 'copy-code-button';
        button.type = 'button';
        var s = $.trim($(this).text());
        s = s.replace(/\u00A0/ig, " ") //去除&nbsp;空格(/u00a0)
        button.setAttribute('data-clipboard-text',s);
        button.innerText = '';
        // button.setAttribute('title', 'Copiar para a área de transferência');

        // var pre = codeBlock.parentNode;
        //codeBlock.classList.add('prettyprint');
        // pre.parentNode.insertBefore(button, pre); 
        $(this).append(button); 
        $(this).mouseenter(function() {
            // 在此处编写鼠标移入时的操作
            button.style.display = "block";
        });
        
        // 当鼠标移出元素时触发
        $(this).mouseleave(function() {
            // 在此处编写鼠标移出时的操作
            button.style.display = "none";
        }); 
    });

    var clipboard = new ClipboardJS('.copy-code-button');

    clipboard.on('success', function(e) {
       e.trigger.textContent = '已复制';
       window.setTimeout(function() {
        e.trigger.textContent = '';
       }, 2000);
       e.clearSelection();

    });

    clipboard.on('error', function(e) {
           //console.error('Action:', e.action);
           //console.error('Trigger:', e.trigger);
       e.trigger.textContent = 'Erro ao Copiar';
       window.setTimeout(function() {
         e.trigger.textContent = 'Copiar';
       }, 2000);
       e.clearSelection();
    });
    //pre 复制end
    $(".altblock").click(function() {
        
        if($(this).find('i.fa-plus-square').length !== 0){
            $("#postcomments").show();
            $(this).find('i').removeClass("fa-plus-square").addClass("fa-minus-square");
            
        } else {
            $("#postcomments").hide();
            $(this).find('i').removeClass("fa-minus-square").addClass("fa-plus-square");
            
        }

    });
    $("#qa_headline").click(function() {$(".altblock").click()});

    //反馈按钮
    if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
        $(".feedback-btn").hide();
        $("#respond").hide();
        //$(".cta-box").hide();
        $("#index-nav li").each(function( index ) {
            if(index > 2) {
                $(this).hide();
            }
        });
        if(  $("#ad-336280").length != 0 && isWeiXin() === false) {
            // $("#ad-336280").show();
        }
        if( false && $("#ad").length != 0 && isWeiXin() === false) {
            $.getJSON("/api/ads.php", function(data) {
                if(data.tbad.is_show){
                    _html = '<a href="'+data.tbad.url+'" target="_blank"><img style="width:100%" src="'+data.tbad.image+'"></a>'; 
                    $("#ad").html(_html);
                }
            });
        }
    } else {
        $(".feedback-btn").show();
        if(  $("#ad-618").length != 0) {
             $("#ad-618").show();
        }
    }
    // 评论区域样式

    $(".comt-main li").prepend( "<i style=\"font-size:12px;color:#cfcfcf;padding-right: 4px;\" class=\"fa fa-circle\" aria-hidden=\"true\"></i>" );
    
    // 列表
    color_flag = false; //配色标记
    prev_title_flag = false;
    next_title_flag = false;
    href = window.location.href;
    
    if($("#content img").hasClass('navup')) {
         navup_flag = false;
         $("#leftcolumn").find("a").each(function(index, value){
             if(href.indexOf($(this).prop("href")) != -1) {
                 navup_flag = true;
                 return false; 
             }
         });
        if(!navup_flag) {
            href = $(".navup").parent('a').prop("href");
        }
    }
    // 定位到指定评论位置
    var hash = window.location.hash;
    
    if(hash && $(hash).length && $(hash).is(':hidden')) {
        $("#postcomments").show();
        $("html,body").animate({scrollTop:$(hash).offset().top},200)
    } 

    
    const $leftColumnLinks = $("#leftcolumn a");
    const total = $leftColumnLinks.length;
    let currentHref = window.location.href;
    let prevObj = null;
    let colorFlag = false;
    let prevTitleFlag = false;
    let nextTitleFlag = false;
    var $link = $('a').has('img.navup');
    if ($link.length > 0) {
        // 获取链接的href属性值
        var linkHref = $link.attr('href');
        linkHref = linkHref.match(/[^/]*$/)[0].trim();
        const origin = window.location.origin;
        let pathname = window.location.pathname;
        
        // 移除路径的最后一部分（文件名）
        const pathParts = pathname.split('/');
        pathParts.pop(); // 移除最后一个元素
        const directoryPath = pathParts.join('/') + '/';
       currentHref = origin + directoryPath + linkHref;

        // 输出结果
      //  console.log('链接:', currentHref);
       

      
    } else {    
    //console.log(currentHref);
    }
     //console.log(currentHref);
    $leftColumnLinks.each(function (index) {
        if (nextTitleFlag) return false; // 如果已经找到下一个链接，结束循环
        const $currentLink = $(this);
        const currentLinkHref = $currentLink.prop("href");
        if (currentHref.indexOf(currentLinkHref) !== -1) {
            // 隐藏“上一页”或“下一页”链接
            if (index === 0) $(".previous-design-link").hide();
            if (index === total - 1) $(".next-design-link").hide();

            // 第二重判断：处理相对路径
            if (currentLinkHref.indexOf('/') === -1) {
                const tmpUrl = currentHref.substring(0, currentHref.lastIndexOf('/') + 1) + currentLinkHref;
                if (currentHref !== tmpUrl) return;
            }

            // 标记当前链接
            if (!colorFlag) {
                $currentLink.css({ "background-color": "#96b97d", "font-weight": "bold", "color": "#fff" })
                           .prepend('<i class="fa fa-tag" aria-hidden="true"></i>');
                colorFlag = true;
            }

            // 设置“上一页”链接
            if (!prevTitleFlag) {
                const $prevLink = $currentLink.prev("a");
                const prevHref = $prevLink.prop("href");
                const prevTitle = $prevLink.prop("title") || $prevLink.text();

                if (prevTitle) {
                    $(".previous-design-link a")
                        .prop("href", prevHref)
                        .prop("title", prevTitle)
                        .text(prevTitle);
                } else if (prevObj) {
                    const prevHref = prevObj.prop("href");
                    const prevTitle = prevObj.prop("title") || prevObj.text();
                    if (prevTitle) {
                        $(".previous-design-link a")
                            .prop("href", prevHref)
                            .prop("title", prevTitle)
                            .text(prevTitle);
                    }
                }
                prevTitleFlag = true;
            }

            // 设置“下一页”链接
            const $nextLink = $currentLink.next("a");
            const nextHref = $nextLink.prop("href");
            const nextTitle = $nextLink.prop("title") || $nextLink.text();

            if (nextTitle) {
                const $nextDesignLink = $(".next-design-link");
                if ($nextDesignLink.find("a").length) {
                    $nextDesignLink.find("a")
                        .prop("href", nextHref)
                        .prop("title", nextTitle)
                        .text(nextTitle);
                } else {
                    $nextDesignLink.html(`<a href="${nextHref}" rel="next" title="${nextTitle}">${nextTitle}</a> <i style="font-size:16px;" class="fa fa-arrow-right" aria-hidden="true"></i>`);
                }
                nextTitleFlag = true;
            }
        } else {
            prevObj = $currentLink; // 记录上一个链接对象

            // 如果已经找到上一个链接，尝试设置下一个链接
            if (prevTitleFlag && !nextTitleFlag) {
                const nextHref = $currentLink.prop("href");
                const nextTitle = $currentLink.prop("title") || $currentLink.text();

                if (nextTitle) {
                    const $nextDesignLink = $(".next-design-link");
                    if ($nextDesignLink.find("a").length) {
                        $nextDesignLink.find("a")
                            .prop("href", nextHref)
                            .prop("title", nextTitle)
                            .text(nextTitle);
                    } else {
                        $nextDesignLink.html(`<a href="${nextHref}" rel="next" title="${nextTitle}">${nextTitle}</a> <i style="font-size:16px;" class="fa fa-arrow-right" aria-hidden="true"></i>`);
                    }
                    nextTitleFlag = true;
                }
            }
        }
    });
    
    // 侧栏
    $(".sidebar-tree > ul > li").hover(function(){
        //$(this).addClass("selected");
        $(this).children("a:eq(0)").addClass("h2-tit");
        $(this).children("ul").show();
    },function(){
        //$(this).removeClass("selected");
        $(this).children(".tit").removeClass("h2-tit");
        $(this).children("ul").hide();
    })
    // 关闭QQ群
    $(".qqinfo").hide();
  
    // 首页导航
    $("#index-nav li").click(function(){
        $(this).find("a").addClass("current");
        $(this).siblings().find("a").removeClass("current");
        id = $(this).find("a").attr("data-id");
        $(".sub-navigation-articles").hide();
        if(id == 'index') {
            
        }
        if(id == 'note') {
            
        } else if(id == 'tool') {

        } else if(id == 'quiz') {
            $("#tool").hide();
            $("#manual").hide();
            $("#" + id).show();
            $(".sub-navigation-articles").show();
        } else if(id == 'manual') {
            $("#tool").hide();
            $("#quiz").hide();
            $("#" + id).show();
            $(".sub-navigation-articles").show();
        } else {
            $("#tool").hide();
            $("#quiz").hide();
            $("#manual").hide();
        }
    });
    // 详情页导航
    $("#runoob-detail-nav li").click(function() {
        // 添加当前选中项的样式
        $(this).find("a").addClass("current");
        $(this).siblings().find("a").removeClass("current");
    
        // 获取点击项的 data-id
        const id = $(this).find("a").data("id");
    
        // 隐藏所有子导航内容
        $(".sub-navigation-articles").hide();
        $(".sub-navigation-articles ul").hide();
    
        // 如果点击的项有 data-id，则显示对应的子导航内容
        if (id) {
            $("#" + id).show();
            $(".sub-navigation-articles").show();
        }
    });

    $("#note-nav li").each(function(){
        if(window.location.pathname == $(this).find("a").attr("href")) {
            $(this).find("a").addClass("current");
            return false;
        }
      });
    $("#cate0").click(function() {
        $(".codelist-desktop").show();
        _scrollFLag = true;
        $('html,body').animate({ scrollTop: 0 }, 'fast');
        $(".home-left-column").css({"width":"16%"}); 
    })
    $(".design").click(function() {
        id = $(this).prop("id");
        $("." + id).show();
        $("." + id).siblings().hide();
        _scrollFLag = false;
        if($(".left-column").hasClass('site-fix')) {
            $(".left-column").removeClass('site-fix');
            $(".home-left-column").css({"width":"16%"}); 
            $(".middle-column-home").css({"float":""});
        
            $('html,body').animate({ scrollTop: 0 }, 'fast');
        }
    })
    //移动设备点击链接    
    $('a').on('click touchend', function(e) {
        if(screen.availHeight==548 && screen.availHeight==320) {
              var el = $(this);
              var link = el.attr('href');
              window.location = link;
          }
    });
    
    $("#pull").click(function() {
        if($(".runoob-col-md2").length) {
            $(".runoob-col-md2").slideToggle("400",function() {});
        } else if($(".left-column").length) {
            $(".left-column").slideToggle("400",function() {});
        }
        
    })
    $(".qrcode").hover(function(){
        $("#bottom-qrcode").show();
        },function(){
            $("#bottom-qrcode").hide();
    });
    

     // 左侧滚动部分代码
    if($("#leftcolumn").length && $(".previous-next-links").length) {
        var _dheight = $(document).height();
        var _wheight = $(window).height();
        if($(".previous-next-links:eq(1)").length) {
            var _endArticle = $(".previous-next-links:eq(1)").offset().top;
        }
        var _leftaTop = $("#leftcolumn a").last().offset().top;
        var _maxScrollTop = _dheight - $(window).height();
        var _scrollFLag = true;

        // 检测底部
        var top_of_element = $("#footer").offset().top;
        var bottom_of_element = $("#footer").offset().top + $("#footer").outerHeight();
        var bottom_of_screen = $(window).scrollTop() + $(window).innerHeight();
        var top_of_screen = $(window).scrollTop();

        if ((bottom_of_screen > top_of_element) && (top_of_screen < bottom_of_element)){
            _bottomFlag = true;
        } else {
            _bottomFlag = false;
        }
        // 检测移动设备
        if($("#pull").is(":visible")){
            _mobileFlag = true;
        } else {
            _mobileFlag = false;
        }
    } 

    if($("#main-left-cloumn").length) {
        var _scrollFLag = true;
        $(window).on('resize', function(){
            var win = $(this); //this = window
            if (win.width() <= 1025) { 
                if($(".left-column").hasClass('site-fix')) {
                    $(".left-column").removeClass('site-fix');
                    $(".home-left-column").css({"width":"16%"}); 
                    $(".middle-column-home").css({"float":""});
                }

             }
        });
    }
    //IE 、Edge浏览器 fixed 背景抖动处理
    if(navigator.userAgent.match(/Trident\/7\./)) {
        document.body.addEventListener && document.body.addEventListener("mousewheel", function(event) {
            event.preventDefault();
            const wheelDelta = event.wheelDelta;
            const currentScrollPos = window.pageYOffset;
            window.scrollTo(0, currentScrollPos - wheelDelta);
        });
    }
    
    $(window).scroll(function () {
        var _stop = $(window).scrollTop();
        top_of_element = $("#footer").offset().top;
        bottom_of_element = $("#footer").offset().top + $("#footer").outerHeight();
        bottom_of_screen = $(window).scrollTop() + $(window).innerHeight();
        top_of_screen = $(window).scrollTop();
        // 检测移动设备
        
        if($("#pull").is(":visible")){
            _mobileFlag = true;
        } else {
            _mobileFlag = false;
        }
        if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
            _mobileFlag = true;
        }
         //左侧滚动部分代码
        if(( $("#leftcolumn").length || $("#main-left-cloumn").length) && !_mobileFlag) {
            
            if( $("#main-left-cloumn").length) {
                _wtop = $(".middle-column-home").offset().top + $(".middle-column-home").height(); 
            } else {
                _wtop = $(".middle-column").offset().top + $(".middle-column").height();
            }
            
            var _footerHeight = $("#footer").offset().top;
            if(_leftaTop>=_endArticle) {
                _wtop = _wtop - _stop ;
            } else if(_wheight<(_footerHeight-_stop)) {
                _wtop = _wheight;
            } else {
                _wtop = _footerHeight - _stop - 10;
            }
            
            if(_scrollFLag &&  _stop>=120 && $(window).width() > 768) {
                if($("#main-left-cloumn").length) {
                    $(".middle-column-home").css({"float":"right"});
                    //$(".home-left-column").css({"width":"14%"});  
                    
                }
                    
                if(!$(".left-column").hasClass("site-fix")) {
                        _widthFix = $(".runoob-col-md2").width();
                        if($("#main-left-cloumn").length) {
                            _widthFix = $(".home-left-column").width();
                            
                        }
                        $(".left-column").addClass("site-fix");
                        $(".left-column").css({"width": _widthFix + "px"});
                    }
                } else if(_scrollFLag){
                    _scrollFLag = true;
                    if($(".left-column").hasClass("site-fix")) {
                        $(".left-column").removeClass("site-fix");
                        $(".left-column").css("width","");
                    }
                }
                if ((bottom_of_screen > top_of_element) && (top_of_screen < bottom_of_element)){
                    
                        _bottom = bottom_of_screen - top_of_element;
                        $(".left-column").css({"bottom": _bottom + "px"});
                } else {
                        $(".left-column").css({"bottom": ""});
                }
                
            }
        
        if(_stop>=100) {
            $(".go-top").fadeIn();
             if ($('#htmlfeedback-container').length){
                 if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
                        
                } else {
                     $("#htmlfeedback-container").show();
                 }
             }
        }else {
            $(".go-top").fadeOut();
        }
    });


    $(".go-top").click(function(event){    
        $('html,body').animate({scrollTop:0}, 100);
        return false;
    });
    $(window).resize(function() {
        var viewportWidth = $(window).width();
        if(window.location.href.indexOf("w3cnote")!=-1) {
            //console.log('href', window.location.href);
        } else {
            if(viewportWidth>768) {
                $(".runoob-col-md2").show();
            }
        }
        if (viewportWidth < 568) { 
            $("#index-nav li").each(function( index ) {
                if(index > 2) {
                    $(this).hide();
                }
            });
        } else {
            $("#index-nav li").show();
        }
        
    });

    if($(".ad-600160").hasClass("aliyun-ads")) {
        $.getJSON("/api/ads.php",function(data){
            if(data.aliyun.is_show) {
                _adhtml = '<a target="_blank" href="'+ data.aliyun.url +'"><img src="' + data.aliyun.image + '"></a>';
                $(".ad-600160").html(_adhtml);
                $(".ad-600160").parent(".ad-box-large").show();
            }
        });
    }
    
   // 用户记录 start
    const arr1 = window.location.href.split(".");
    const isHtmlPage = arr1[arr1.length - 1] === 'html';

    if (isHtmlPage) {
        $(".writer").show();
    }

    $(".writer").click(function() {
        if (!isHtmlPage) return;

        const artTitle = $.trim($("#content h1").text()); // 文章标题
        const artUrl = $.trim(document.URL); // 页面地址

        if (typeof(Storage) === "undefined") {
            alert("抱歉! 您的浏览器不支持 web 存储。");
            return;
        }

        let artObject = localStorage.getItem("artObject");
        let urls = artObject ? JSON.parse(artObject).urls : [];

        // 检查是否已经存在相同的标题
        const isAlreadyMarked = urls.some(item => item.title === artTitle);
        if (isAlreadyMarked) {
            alert("文章已标记！");
            return;
        }

        // 添加新记录
        urls.push({ title: artTitle, url: artUrl });

        // 限制最多保存20条记录
        const maxRecords = 20;
        if (urls.length > maxRecords) {
            urls = urls.slice(-maxRecords);
        }

        // 保存到localStorage
        localStorage.setItem("artObject", JSON.stringify({ urls }));
        alert("文章标记成功！");
    });

    // 显示历史记录
    if ($('#historylist').length && typeof(Storage) !== "undefined") {
        const artObject = localStorage.getItem("artObject");
        let historyHtml = '<li>没有标记记录！！！</li>';

        if (artObject) {
            const urls = JSON.parse(artObject).urls;
            historyHtml = urls.reverse().map(item => 
                `<li>
                    <a target="_blank" href="${item.url}">${item.title}</a> | 
                    <a href="javascript:delHis('${item.url}')">[删除]</a>
                </li>`
            ).join('');
        }

        $('#historylist').html(historyHtml);
    }
    // 用户记录 end
    $(".previous-design-link i").wrap('<a href="'+$(".previous-design-link a").prop("href")+'"></a>');
    $(".next-design-link i").wrap('<a href="'+$(".next-design-link a").prop("href")+'"></a>');

});
/**
* 用户登陆注册
*/
jQuery(document).ready(function($){
    var $form_modal = $('.cd-user-modal'),
        $form_login = $form_modal.find('#cd-login'),
        $form_signup = $form_modal.find('#cd-signup'),
        $form_modal_tab = $('.cd-switcher'),
        $tab_login = $form_modal_tab.children('li').eq(0).children('a'),
        $tab_signup = $form_modal_tab.children('li').eq(1).children('a'),
        $runoob_pop = $('.runoob-pop'),
        
        login_flag= false;
    $.ajaxSetup({ 
        async : false 
    });     
    //判断是否登陆
    if(readCookie('checklogin_ajax')) {
        $.post('/wp-content/themes/runoob/option/user/log.php',{action:'checklogin'},function(res){
            if(res.error==0) {
                $('<a target="_blank" href="//www.runoob.com/member">'+res.msg+'</a>').replaceAll('.runoob-pop');
                login_flag = true;
            
            } else {
                eraseCookie('checklogin_ajax');// 删除 cookie
            }
        },'json');
    }

    if(typeof aid !== 'undefined' && aid>0 && login_flag ) {
        $.post( '/wp-content/themes/runoob/option/user/userinfo.php', {aid:aid, action:"collarticle", opt:'init'}, function( data ) {
              if(data.error==0) {
                  $("#content").find("h1:first").append(data.msg);
                  $(".comment-signarea").hide();
                  $("#commentform").show();
                  $("#comment-author-info li:lt(2)").hide();
                  $("#is_user_logged_in").val(1);
                  $(".comt-title p:first").html(data.username);

              } else {
                  $(".comment-signarea").show();
                  $("#commentform").hide();
                  $("#is_user_logged_in").val(0);
              }
        },'json');
    }
    
    //弹出窗口
    $runoob_pop.on('click', function(event){
        $form_modal.addClass('is-visible');    
        //show the selected form
        ( $(event.target).is('.cd-signup') ) ? signup_selected() : login_selected();
    });

    //关闭弹出窗口
    $('.cd-user-modal').on('click', function(event){
        if( $(event.target).is($form_modal) || $(event.target).is('.cd-close-form') ) {
            $form_modal.removeClass('is-visible');
        }    
    });
    //使用Esc键关闭弹出窗口
    $(document).keyup(function(event){
        if(event.which=='27'){
            $form_modal.removeClass('is-visible');
        }
    });

    //切换表单
    $form_modal_tab.on('click', function(event) {
        event.preventDefault();
        ( $(event.target).is( $tab_login ) ) ? login_selected() : signup_selected();
    });

    function login_selected(){
        $form_login.addClass('is-selected');
        $form_signup.removeClass('is-selected');
        $tab_login.addClass('selected');
        $tab_signup.removeClass('selected');
    }

    function signup_selected(){
        $form_login.removeClass('is-selected');
        $form_signup.addClass('is-selected');
        $tab_login.removeClass('selected');
        $tab_signup.addClass('selected');
    }
    $('.full-width2').on('click', function(e){
        e.preventDefault();     
        var form = $(this).parent().parent();
        var action = form.find('input[name="action"]').val();
        var inputs = '';
        var isreg = (action == 'signup') ? true : false

        if( !action ){
            return
        }

        if( isreg ){ // 注册
            verifycode = form.find('input[name="verifycode"]').val();
            email = form.find('input[name="email"]').val();
            name = form.find('input[name="name"]').val();
            password = form.find('input[name="password"]').val();
            password2 = form.find('input[name="password2"]').val();
            inputs = {verifycode:verifycode,name:name,password:password,email:email,password2:password2,action:action};
        }else{ // 登陆
            username = form.find('input[name="username"]').val();
            password = form.find('input[name="password"]').val();
            if($('#remember-me').prop('checked')) {
                remember = 1;
            } else {
                remember = 0;
            }
            inputs = {username:username,password:password,action:action,remember:remember};
        }

        $.ajax({  
            type: "POST",  
            url:  jsui.uri+'/option/user/log.php',  
            data: inputs,  
            dataType: 'json',
            success: function(data){
                createCookie('checklogin_ajax', true, 15);// 设置需要异步请求
                if( data.error ){
                    error_msg = '<p class="errtip">    <strong>错误</strong>：'+data.msg+'</p>'
                    $(".err-msg").html(error_msg);
                    //eraseCookie('checklogin_ajax');// 删除 cookie
                    return;
                }
                if( isreg ){
                    location.reload();
                }else{
                     location.reload();
                }
            }  
        });  
    });
    // Bootstrap 2.x 提示
    if(window.location.href.indexOf('bootstrap-v2')!==-1) {
        var bs2_info = '<div style="color:#a94442;background-color:#f2dede;border-color:#ebccd1;padding: 15px;margin-bottom: 20px;border: 1px solid transparent;border-radius: 4px;"><strong>提示：</strong>你当前查看的是 Bootstrap 2.x 版本，<a target="_blank" href="/bootstrap/bootstrap-tutorial.html">Bootstrap3.x 版本点我</a>。</div>';
        $("#content").prepend(bs2_info);
    }
    $(".widget-header i:odd").click(function() {
        if($(this).hasClass("fa-caret-up")) {
            $(this).parent(".widget-header").siblings(".widget-content").hide();
            $(this).removeClass("fa-caret-up").addClass("fa-caret-down");
        } else {
            $(this).parent(".widget-header").siblings(".widget-content").show();
            $(this).removeClass("fa-caret-down").addClass("fa-caret-up");
        } 
    });

    // 夜间模式与日间模式
    const $moon = $("#moon");
    const $sun = $("#sun");
    const cateID = $moon.attr("data-cate");
    const cookieMoon = cateID ? readCookie("moon" + cateID) : null;

    // 夜间模式样式配置
    const nightModeStyles = {
        ".example_code": { backgroundColor: "#1d1e20", color: "#fff" },
        ".example_result": { backgroundColor: "#2e3033", color: "#fff" },
        "div.example": { backgroundImage: "linear-gradient(#797979,#000 100px)" },
        "div.example .showbtn, div.example .tryitbtn": { backgroundColor: "#2e3033" },
        "div.example p": { color: "#fff" },
        "div.code": { backgroundColor: "#2e3033", color: "#fff" },
        "h2.example": { color: "#fff" },
        ".hl-main": { backgroundColor: "#1d1e20" },
        ".article": { backgroundColor: "#2e3033", color: "#fff" },
        ".reference tr:nth-child(even)": { backgroundColor: "#2e3033" },
        ".simditor-wrapper, .simditor-toolbar, .comt-ctrl, .ipt": { backgroundColor: "#2e3033" },
        "#content h1": { color: "#fff" },
        "#content blockquote, #content blockquote p": { backgroundColor: "#2e3033" },
        "tr, .marked": { backgroundColor: "#2e3033" },
        ".comt-main, .simditor-body p": { color: "#fff" },
        "#content code, .simditor-body code": { backgroundColor: "#2e3033" },
        "#comment-author-info input": { color: "#fff" },
        ".previous-next-links": { backgroundColor: "#2e3033" },
        "table.lamp td, table.lamp th": { backgroundColor: "#2e3033" },
        "#comments h2": { backgroundColor: "#2e3033", color: "#fff" },
        ".commentlist blockquote": { backgroundColor: "#000" },
        ".simditor-toolbar a": { color: "#fff" },
        ".comt-meta": { backgroundColor: "#000" },
        "#footer .runoob-block": { backgroundColor: "#000" },
        ".article-body a": { color: "#91e391" },
        "div.navigation": { backgroundColor: "#1f2223" },
        "div.sidebar-box": { backgroundColor: "#000" },
        "ul.double-li, div.recommend-here, div.re-box, div.recommend-here a": { backgroundColor: "#1f2223" },
        "div.sidebar-tree a": { color: "#fff" },
        "li.selected": { backgroundColor: "#000" },
        "div.left-column .tab": { backgroundColor: "#1f2223" },
        "#leftcolumn a": { backgroundColor: "#1f1b12", color: "#fff" },
        "div.sidebar-tree li": { backgroundColor: "#1f1b12" },
        "body": { background: "#000" },
        "#respond .comment-signarea": { backgroundColor: "#000" },
        "div.left-column": { backgroundColor: "#1d1f20", border: "1px solid #eee" },
        "div.search-input form": { backgroundColor: "#000" },
        "div.search-input input": { color: "#073642", backgroundColor: "#a9bdbd", boxShadow: "0px 1px 5px #073642" },
        ".hl-special": { color: "#9191bb" },
        ".hl-string": { color: "#cdc0c0" },
        ".hl-quotes": { color: "#8bc2a3" },
        ".hl-identifier": { color: "#a9ccee" },
        ".hl-number": { color: "#cd9ec6" },
        ".hl-var": { color: "#b6b6e8" },
        ".archive-options, .archive-list": { backgroundColor: "#2e3033" }
    };

    // 日间模式样式配置
    const dayModeStyles = {
        ".example_code": { backgroundColor: "#fff", color: "#000" },
        ".example_result": { backgroundColor: "#fff", color: "#000" },
        "div.example": { backgroundImage: "linear-gradient(#fff,#e5eecc 100px)" },
        "div.example .showbtn, div.example .tryitbtn": { backgroundColor: "#8ca86d",color: "#fff"},
        "div.example p": { color: "#000" },
        "div.code": { backgroundColor: "#f6f4f0", color: "#444" },
        "h2.example": { color: "#617f10" },
        ".hl-main": { backgroundColor: "#fff" },
        ".article": { backgroundColor: "#fff", color: "#000" },
        ".reference tr:nth-child(even)": { backgroundColor: "#fff" },
        ".simditor-wrapper, .simditor-toolbar, .ipt": { backgroundColor: "#fff" },
        ".comt-ctrl": { backgroundColor: "#fbfbfb" },
        "#content h1": { color: "#000" },
        "#content blockquote, #content blockquote p": { backgroundColor: "#f3f7f0" },
        "tr:even": { backgroundColor: "#f6f4f0" },
        "tr:odd": { backgroundColor: "#fff" },
        ".marked": { backgroundColor: "#eceae6" },
        ".comt-main, .simditor-body p": { color: "#000" },
        "#content code, .simditor-body code": { backgroundColor: "#eee" },
        "#comment-author-info input": { color: "#333" },
        ".previous-next-links": { backgroundColor: "#fbfbfb" },
        "table.lamp td, table.lamp th": { backgroundColor: "#fff" },
        "#comments h2": { backgroundColor: "#f6f5f4", color: "#222" },
        ".commentlist blockquote": { backgroundColor: "#f3f7f0" },
        ".simditor-toolbar a": { color: "#000" },
        ".comt-meta": { backgroundColor: "#ececec" },
        "#respond .comment-signarea": { backgroundColor: "#F6F6F6" },
        "body": { background: "#f6f6f6" },
        "#footer .runoob-block": { backgroundColor: "#fff" },
        "div.navigation": { backgroundColor: "#96b97d" },
        "div.sidebar-box": { backgroundColor: "#fff" },
        "ul.double-li, div.recommend-here, div.re-box, div.recommend-here a": { backgroundColor: "#e9e9e9" },
        "div.sidebar-tree a": { color: "#000" },
        "div.sidebar-tree li": { backgroundColor: "#f5f2ee" },
        "div.left-column .tab": { backgroundColor: "#f2f2f2" },
        "#leftcolumn a": { backgroundColor: "#f6f4f0", color: "#000" },
        "div.left-column": { backgroundColor: "#fff", border: "1px solid #eee" },
        "div.search-input form": { backgroundColor: "#eeefed" },
        "div.search-input input": { color: "#ccc", backgroundColor: "#fff", boxShadow: "0px 1px 5px rgb(0 0 0 / 10%)" },
        ".hl-special": { color: "Navy" },
        ".hl-string": { color: "#a11" },
        ".hl-quotes": { color: "#8b0000" },
        ".hl-identifier": { color: "#05a" },
        ".hl-number": { color: "Maroon" },
        ".archive-options, .archive-list": { backgroundColor: "#fff" },
        ".hl-var": { color: "#cd9ec6" }
    };

    // 应用样式
    function applyStyles(styles) {
        for (const selector in styles) {
            $(selector).css(styles[selector]);
        }
    }

    // 处理夜间模式
    function enableNightMode() {
        $moon.hide();
        $sun.show();
        applyStyles(nightModeStyles);
        $(".example_code span").each(function () {
            const $element = $(this);
            if ($element.attr("style")) {
                let style = $element.attr("style")
                    .replace("#000066", "#2e95d3")
                    .replace("#800080", "#da9edaeb")
                    .replace("#000", "#fff")
                    .replace("#000000", "#ffffff");
                $element.attr("style", style);
            }
        });
        $("<link/>", {
            rel: "stylesheet",
            type: "text/css",
            href: "https://static.jyshare.com/assets/libs/hl/sons-of-obsidian.css"
        }).appendTo("head");
        if (cateID && !cookieMoon) {
            createCookie("moon" + cateID, 1, 1);
        }
    }

    // 处理日间模式
    function enableDayMode() {
        $sun.hide();
        $moon.show();
        applyStyles(dayModeStyles);
        $(".example_code span").each(function () {
            const $element = $(this);
            if ($element.attr("style")) {
                let style = $element.attr("style")
                    .replace("#2e95d3", "#000066")
                    .replace("#da9edaeb", "#800080")
                    .replace("#fff", "#000")
                    .replace("#ffffff", "#000000");
                $element.attr("style", style);
            }
        });
        $('link[href*="sons-of-obsidian.css"]').remove();
        if (cateID) {
            eraseCookie("moon" + cateID);
        }
    }

    // 绑定事件
    $moon.on("click", enableNightMode);
    $sun.on("click", enableDayMode);

    // 初始化
    if (cateID && cookieMoon) {
        $moon.trigger("click");
    }
    if (window.location.href.indexOf("python-exercise") > -1) {
        $("#respond").hide();
    }

});



jQuery.fn.putCursorAtEnd = function() {
    return this.each(function() {
        // If this function exists...
        if (this.setSelectionRange) {
              // ... then use it (Doesn't work in IE)
              // Double the length because Opera is inconsistent about whether a carriage return is one character or two. Sigh.
              var len = $(this).val().length * 2;
              this.setSelectionRange(len, len);
        } else {
            // ... otherwise replace the contents with itself
            // (Doesn't work in Google Chrome)
              $(this).val($(this).val());
        }
    });
};
//--------- 登陆，注册结束---------------
// 废弃弹窗
function NewWindow(text)
{
    win=window.open(text,'','top=0,left=0,width=400,height=230');
}

function createCookie(name,value,days) {
    var expires = "";
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days*24*60*60*1000));
        expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + value + expires + "; path=/";
}

function readCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for(var i=0;i < ca.length;i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1,c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
    }
    return null;
}
function eraseCookie(name) {
    createCookie(name,"",-1);
}

// 创建用户 ID
function uuid() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
          return v.toString(16);
    });
}
var userID='';
if(readCookie("runoob-uuid")) {
    userID = readCookie("runoob-uuid");
} else {
    userID=uuid();
    createCookie("runoob-uuid", userID, 365);
}
function push_runoob_search(post_id) {
    if(post_id && userID && rn && ops_request_misc) {
        $.post("/wp-content/themes/runoob/option/alisearch/v330/data_collection.php",{"user_id":userID, "rn":rn, "ops_request_misc":ops_request_misc, "post_id":post_id},function(result){
        
        });
    }

}
//判断是否微信登陆
function isWeiXin() {
    var ua = window.navigator.userAgent.toLowerCase();
    if (ua.match(/MicroMessenger/i) == 'micromessenger') {
        return true;
    } else {
        return false;
    }
}
function dashangToggle(){
    $(".hide_box").fadeToggle();
    $(".shang_box").fadeToggle();
}
function popFunction() {
    var popup = document.getElementById("myPopup");
    popup.classList.toggle("show");
}

/* 测验 */
;(function($, window, document, undefined) {

    'use strict';
  
    $.quiz = function(el, options) {
      var base = this;
  
      // Access to jQuery version of element
      base.$el = $(el);
  
      // Add a reverse reference to the DOM object
      base.$el.data('quiz', base);
  
      base.options = $.extend($.quiz.defaultOptions, options);
  
      var questions = base.options.questions,
        numQuestions = questions.length,
        startScreen = base.options.startScreen,
        startButton = base.options.startButton,
        homeButton = base.options.homeButton,
        resultsScreen = base.options.resultsScreen,
        gameOverScreen = base.options.gameOverScreen,
        nextButtonText = base.options.nextButtonText,
        finishButtonText = base.options.finishButtonText,
        restartButtonText = base.options.restartButtonText,
        currentQuestion = 1,
        score = 0,
        answerLocked = false;
  
      base.methods = {
        init: function() {
          base.methods.setup();
  
          $(document).on('click', startButton, function(e) {
            e.preventDefault();
            base.methods.start();
          });
  
          $(document).on('click', homeButton, function(e) {
            e.preventDefault();
            base.methods.home();
          });
  
          $(document).on('click', '.answers a', function(e) {
            e.preventDefault();
            base.methods.answerQuestion(this);
          });
  
          $(document).on('click', '#quiz-next-btn', function(e) {
            e.preventDefault();
            base.methods.nextQuestion();
          });
  
          $(document).on('click', '#quiz-finish-btn', function(e) {
            e.preventDefault();
            base.methods.finish();
          });
  
          $(document).on('click', '#quiz-restart-btn, #quiz-retry-btn', function(e) {
            e.preventDefault();
            base.methods.restart();
          });
        },
        setup: function() {
          var quizHtml = '';
  
          if (base.options.counter) {
            quizHtml += '<div id="quiz-counter"></div>';
          }
  
          quizHtml += '<div id="questions">';
          $.each(questions, function(i, question) {
            quizHtml += '<div class="question-container">';
            quizHtml += '<p class="question">' + question.q + '</p>';
            quizHtml += '<ul class="answers">';
            $.each(question.options, function(index, answer) {
              quizHtml += '<li><a href="#" data-index="' + index + '">' + answer + '</a></li>';
            });
            quizHtml += '</ul>';
            quizHtml += '</div>';
          });
          quizHtml += '</div>';
  
          // if results screen not in DOM, add it
          if ($(resultsScreen).length === 0) {
            quizHtml += '<div id="' + resultsScreen.substr(1) + '">';
            quizHtml += '<p id="quiz-results"></p>';
            quizHtml += '</div>';
          }
  
          quizHtml += '<div id="quiz-controls">';
          quizHtml += '<p id="quiz-response"></p>';
          quizHtml += '<div id="quiz-buttons">';
          quizHtml += '<a href="#" id="quiz-next-btn">' + nextButtonText + '</a>';
          quizHtml += '<a href="#" id="quiz-finish-btn">' + finishButtonText + '</a>';
          quizHtml += '<a href="#" id="quiz-restart-btn">' + restartButtonText + '</a>';
          quizHtml += '</div>';
          quizHtml += '</div>';
  
          base.$el.append(quizHtml).addClass('quiz-container quiz-start-state');
  
          $('#quiz-counter').hide();
          $('.question-container').hide();
          $(gameOverScreen).hide();
          $(resultsScreen).hide();
          $('#quiz-controls').hide();
        },
        start: function() {
          base.$el.removeClass('quiz-start-state').addClass('quiz-questions-state');
          $(startScreen).hide();
          $('#quiz-controls').hide();
          $('#quiz-finish-btn').hide();
          $('#quiz-restart-btn').hide();
          $('#questions').show();
          $('#quiz-counter').show();
          $('.question-container:first-child').show().addClass('active-question');
          base.methods.updateCounter();
        },
        answerQuestion: function(answerEl) {
          if (answerLocked) {
            return;
          }
          answerLocked = true;
  
          var $answerEl = $(answerEl),
            response = '',
            selected = $answerEl.data('index'),
            currentQuestionIndex = currentQuestion - 1,
            correct = questions[currentQuestionIndex].correctIndex;
  
          if (selected === correct) {
            $answerEl.addClass('correct');
            response = questions[currentQuestionIndex].correctResponse;
            score++;
          } else {
            $answerEl.addClass('incorrect');
            response = questions[currentQuestionIndex].incorrectResponse;
            if (!base.options.allowIncorrect) {
              base.methods.gameOver(response);
              return;
            }
          }
  
          $('#quiz-response').html(response);
          $('#quiz-controls').fadeIn();
  
          if (typeof base.options.answerCallback === 'function') {
            base.options.answerCallback(currentQuestion, selected, questions[currentQuestionIndex]);
          }
        },
        nextQuestion: function() {
          answerLocked = false;
  
          $('.active-question')
            .hide()
            .removeClass('active-question')
            .next('.question-container')
            .show()
            .addClass('active-question');
  
          $('#quiz-controls').hide();
  
          // check to see if we are at the last question
          if (++currentQuestion === numQuestions) {
            $('#quiz-next-btn').hide();
            $('#quiz-finish-btn').show();
          }
  
          base.methods.updateCounter();
  
          if (typeof base.options.nextCallback === 'function') {
            base.options.nextCallback();
          }
        },
        gameOver: function(response) {
          // if gameover screen not in DOM, add it
          if ($(gameOverScreen).length === 0) {
            var quizHtml = '';
            quizHtml += '<div id="' + gameOverScreen.substr(1) + '">';
            quizHtml += '<p id="quiz-gameover-response"></p>';
            quizHtml += '<p><a href="#" id="quiz-retry-btn">' + restartButtonText + '</a></p>';
            quizHtml += '</div>';
            base.$el.append(quizHtml);
          }
          $('#quiz-gameover-response').html(response);
          $('#quiz-counter').hide();
          $('#questions').hide();
          $('#quiz-finish-btn').hide();
          $(gameOverScreen).show();
        },
        finish: function() {
          base.$el.removeClass('quiz-questions-state').addClass('quiz-results-state');
          $('.active-question').hide().removeClass('active-question');
          $('#quiz-counter').hide();
          $('#quiz-response').hide();
          $('#quiz-finish-btn').hide();
          $('#quiz-next-btn').hide();
          $('#quiz-restart-btn').show();
          $(resultsScreen).show();
          var resultsStr = base.options.resultsFormat.replace('%score', score).replace('%total', numQuestions);
          $('#quiz-results').html(resultsStr);
  
          if (typeof base.options.finishCallback === 'function') {
            base.options.finishCallback();
          }
        },
        restart: function() {
          base.methods.reset();
          base.$el.addClass('quiz-questions-state');
          $('#questions').show();
          $('#quiz-counter').show();
          $('.question-container:first-child').show().addClass('active-question');
          base.methods.updateCounter();
        },
        reset: function() {
          answerLocked = false;
          currentQuestion = 1;
          score = 0;
          $('.answers a').removeClass('correct incorrect');
          base.$el.removeClass().addClass('quiz-container');
          $('#quiz-restart-btn').hide();
          $(gameOverScreen).hide();
          $(resultsScreen).hide();
          $('#quiz-controls').hide();
          $('#quiz-response').show();
          $('#quiz-next-btn').show();
          $('#quiz-counter').hide();
          $('.active-question').hide().removeClass('active-question');
        },
        home: function() {
          base.methods.reset();
          base.$el.addClass('quiz-start-state');
          $(startScreen).show();
  
          if (typeof base.options.homeCallback === 'function') {
            base.options.homeCallback();
          }
        },
        updateCounter: function() {
          var countStr = base.options.counterFormat.replace('%current', currentQuestion).replace('%total', numQuestions);
          $('#quiz-counter').html(countStr);
        }
      };
  
      base.methods.init();
    };
  
    $.quiz.defaultOptions = {
      allowIncorrect: true,
      counter: true,
      counterFormat: '%current/%total',
      startScreen: '#quiz-start-screen',
      startButton: '#quiz-start-btn',
      homeButton: '#quiz-home-btn',
      resultsScreen: '#quiz-results-screen',
      resultsFormat: 'You got %score out of %total correct!',
      gameOverScreen: '#quiz-gameover-screen',
      nextButtonText: 'Next',
      finishButtonText: 'Finish',
      restartButtonText: 'Restart'
    };
  
    $.fn.quiz = function(options) {
      return this.each(function() {
        new $.quiz(this, options);
      });
    };
  }(jQuery, window, document));
  